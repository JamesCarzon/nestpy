# Let's upload nestpy to PyPi to make it pip installable
# Mostly based on https://github.com/marketplace/actions/pypi-publish
# Some of this is a bit clunky, we have both Linux and MacOS build.
name: Pipy
on:
  workflow_dispatch:
  release:
    types: [ published ]
  push:
    tags:
      - '*' 

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: False
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, "3.10"]
        os: [ "ubuntu-latest" , "macos-latest", "macos-10.15"]
        exclude:
          - python-version: 3.6
            os: "ubuntu-latest"
          - python-version: 3.7
            os: "ubuntu-latest"
          - python-version: 3.9
            os: "ubuntu-latest"
          - python-version: "3.10"
            os: "ubuntu-latest"
    steps:
      # Setup steps
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version:  ${{ matrix.python-version }}
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install dependencies
        run: pip install wheel twine
      - name: Build weels (linux)
        if: matrix.os == 'ubuntu-latest'
        uses: RalfG/python-wheels-manylinux-build@v0.4.2-manylinux2014_x86_64
        with:
          python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310'
          build-requirements: 'cython numpy'
      - name: Publish wheels to PyPI (linux)
        if: matrix.os == 'ubuntu-latest'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_password }}
        run: |
          twine upload dist/*-manylinux*.whl

      - name: Build package (MAC)
        if: matrix.os != 'ubuntu-latest'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_password }}
        run:
          |
          pip install twine
          python setup.py bdist_wheel
          python -m twine upload -u "${TWINE_USERNAME}" -p "${TWINE_PASSWORD}" dist/*;
